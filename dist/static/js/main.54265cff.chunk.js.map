{"version":3,"sources":["components/layout/SignInLinksCust.js","components/layout/SignOutLinks.js","components/layout/SignInLinksProv.js","components/layout/Navbar.js","components/customer/ProviderSummary.js","components/customer/ProviderList.js","components/customer/MainBoardCust.js","components/provider/OwnedSummary.js","components/provider/OwnedList.js","components/provider/MainBoardProv.js","components/customer/ProviderDetails.js","components/auth/SignIn.js","components/provider/CreateOwn.js","store/actions/ownedActions.js","components/customer/QueuePage.js","components/provider/OwnedQueue.js","App.js","serviceWorker.js","store/reducers/custReducer.js","store/reducers/ownedReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignInLinksCust","react_default","a","createElement","className","react_router_dom","to","firebase","auth","currentUser","displayName","SignOutLinks","SignOutLinksProv","onClick","signOut","connect","state","console","log","props","links","uid","layout_SignInLinksCust","SignInLinksProv","layout_SignOutLinks","ProviderSummary","_ref","customer","name","description","opening","closing","id","ProviderList","cust","map","key","customer_ProviderSummary","MainBoardCust","_this$props","this","customer_ProviderList","react_router","Component","compose","firestore","ordered","providers","firestoreConnect","collection","OwnedSummary","ownedProv","owned","ownedDescription","OwnedList","provider_OwnedSummary","MainBoardProv","provider_OwnedList","ownProps","match","params","data","provider","pageURL","location","pathname","lastURLSegment","substring","lastIndexOf","SignIn","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","callbacks","signInSuccessWithAuthResult","componentDidMount","onAuthStateChanged","user","_this","setState","class","StyledFirebaseAuth_default","firebaseAuth","CreateOwn","handleChange","e","Object","defineProperty","target","value","handleSubmit","preventDefault","createOwned","history","push","onSubmit","htmlFor","type","onChange","dispatch","getState","getFirebase","getFirestore","add","objectSpread","createdAt","Date","then","catch","err","QueuePage","queue","inQueue","isOpen","joinQueue","database","ref","child","update","quitQueue","_this2","on","snap","val","buttonType","queueDescript","queueZero","closedQueue","OwnedQueue","openQueue","closeQueue","addQueue","subQueue","App","layout_Navbar","exact","path","component","ProviderDetails","Boolean","window","hostname","initState","custReducer","arguments","length","undefined","ownedReducer","action","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54265cff.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\n\r\n//Links if the user is a customer.\r\nconst SignInLinksCust = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/customer'className='blue lighten-1'>{firebase.auth().currentUser.displayName}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignInLinksCust","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n//Links shown when user is not logged in.\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinks","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport firebase from 'firebase/app'\r\n\r\n//Links if the user is a provider.\r\nconst SignOutLinksProv = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>Create</NavLink></li>\r\n            <li><NavLink to='/' onClick={() => firebase.auth().signOut()}>Log Out</NavLink></li>\r\n            <li><NavLink to='/provider'className='red lighten-1'>{firebase.auth().currentUser.displayName}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignOutLinksProv","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignInLinksCust from './SignInLinksCust'\r\nimport SignOutLinks from './SignOutLinks'\r\nimport SignInLinksProv from './SignInLinksProv'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth} = props;\r\n    const links = auth.uid ?  <div><SignInLinksCust /> <SignInLinksProv /></div> : <SignOutLinks />;\r\n    return (\r\n        <nav className=\"nav-wrapper black\">\r\n            <div className=\"container\">\r\n                <Link to= '/' className=\"brand-logo\">QSKIP</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n//Logging firebase auth to display layout conditionally.\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Gives more detail to users if required.\r\nconst ProviderSummary = ({customer}) => {\r\n    return(\r\n            <div className=\"card provider-summary\">\r\n                <div className=\"card-content black-text\">\r\n                    <span className=\"card-title\">{customer.name}</span>\r\n                    <p>{customer.description}</p>\r\n                    <p>Opening Hours: {customer.opening} - {customer.closing}</p>\r\n                    <div className=\"input-field\">\r\n                        <Link to={'/queue/'+ customer.id}  className=\"btn blue lighten-1\">Queue Now!\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default ProviderSummary","import React from 'react'\r\nimport ProviderSummary from './ProviderSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Generates adaptive list of providers based on firestore.\r\nconst ProviderList = ({cust}) => {\r\n    return(\r\n        <div className=\"provider-list section\">\r\n            {cust && cust.map(customer =>{\r\n                return(\r\n                    <Link to={'/customerList/'+ customer.id} key={customer.id}>\r\n                        <ProviderSummary customer={customer}/>\r\n                    </Link>\r\n\r\n                )\r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProviderList","import React, {Component} from 'react'\r\nimport ProviderList from './ProviderList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n//Main board to hold and display providers for customers to queue for.\r\nclass MainBoardCust extends Component {\r\n    render(){\r\n        const {cust, auth} = this.props;\r\n\r\n        //Route guard for unlogged users.\r\n        if(!auth.uid){\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div className=\"mainboardcust container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProviderList cust={cust}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Adds firebase reference to page.\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cust: state.firestore.ordered.providers,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'providers'}\r\n    ])\r\n)(MainBoardCust)","import React from 'react'\r\nimport firebase from 'firebase/app'\r\nimport {Link} from 'react-router-dom'\r\n//import {deleteOwned} from '../../store/actions/ownedActions'\r\n//import {connect} from 'react-redux'\r\n\r\n//Allows the provider to see more details of their establishment if required.\r\nconst OwnedSummary = ({ownedProv}) => {\r\n\r\n    //NOT IN FINAL BUILD, supposed to allow the provider to delete a service but ran out of time.\r\n    //const handleSubmit = (e) =>{\r\n      //  e.preventDefault();\r\n      //  this.props.deleteOwned(ownedProv);\r\n      //  this.props.history.push('./provider');\r\n   // }\r\n\r\n    if(ownedProv.owned!==firebase.auth().currentUser.uid){\r\n        return (<div></div>)\r\n    }\r\n\r\n\r\n    return(\r\n            <div className=\"card owned-summary\">\r\n                <div className=\"card-content black-text\">\r\n                    <span className=\"card-title\">{ownedProv.name}</span>\r\n                    <p>{ownedProv.ownedDescription}</p>\r\n                    <p>Opening Hours: {ownedProv.opening} - {ownedProv.closing}</p>\r\n                    <div className=\"input-field\">\r\n                        <Link to={'/ownedQueue/'+ ownedProv.id} className=\"btn red lighten-1\">Queue Settings</Link>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n//const mapDispatchToProps = (dispatch) => {\r\n //   return {\r\n   //     deleteOwned: (owned) => dispatch(deleteOwned(owned))\r\n    //}\r\n//}\r\n\r\nexport default OwnedSummary","import React from 'react'\r\nimport OwnedSummary from './OwnedSummary'\r\n\r\nconst OwnedList = ({owned}) => {\r\n    return (\r\n        <div className=\"owned-list section\">\r\n            {owned && owned.map(ownedProv =>{\r\n                \r\n                return (\r\n                    <OwnedSummary ownedProv={ownedProv} key={ownedProv.id}/>)\r\n            })}\r\n  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OwnedList","import React, {Component} from 'react'\r\nimport OwnedList from './OwnedList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n//Main container to hold and display providers that user owns.\r\nclass MainBoardProv extends Component {\r\n    render(){\r\n        const {owned, auth} = this.props;\r\n\r\n        //Route guard.\r\n        if(!auth.uid){\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        \r\n        return (\r\n            <div className=\"mainboardprov container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <OwnedList owned={owned}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        owned: state.firestore.ordered.providers,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'providers'}\r\n    ])\r\n)(MainBoardProv)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProviderDetails = (props) => {\r\n    const {provider, auth} = props;\r\n\r\n    var pageURL = props.location.pathname;\r\n    var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n\r\n    //Route guard for unlogged users.\r\n    if(!auth.uid){\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    if (provider){\r\n        return(\r\n        <div className=\"container section provider-details\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">{provider.name}</span>\r\n                            <p>{provider.description}</p>\r\n                            <div className=\"input-field\">\r\n                                <Link to={'/queue/'+ lastURLSegment}>\r\n                                    <button className=\"btn blue lighten-1\">Queue Now!</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action\">Opening Hours: {provider.opening} - {provider.closing}</div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading</p>\r\n            </div>\r\n            )\r\n    }\r\n\r\n}\r\n\r\n//Adds firestore reference to page.\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const providers = state.firestore.data.providers;\r\n    const provider = providers ? providers[id] : null;\r\n    return{\r\n        provider: provider,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'providers'}\r\n    ])\r\n)(ProviderDetails)\r\n\r\n","import React, { Component } from 'react'\r\nimport firebase from 'firebase/app'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Creates the sign in page using firebase authentication with third party.\r\nclass SignIn extends Component {\r\n    state = { isSignedIn: false }\r\n    uiConfig = {\r\n        signInFlow: \"popup\",\r\n        signInOptions: [\r\n          firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n          firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n          firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n        ],\r\n        callbacks: {\r\n          signInSuccessWithAuthResult: () => false\r\n        }\r\n      }\r\n\r\n      componentDidMount = () => {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n          this.setState({ isSignedIn: !!user })\r\n          console.log(\"user\", user)\r\n        })\r\n      }\r\n\r\n\r\n      //Renders different pages depending on user sign up.\r\n    render() {\r\n        return (\r\n                  <div className=\"App\">\r\n        {this.state.isSignedIn ? (\r\n          <span>\r\n            <div class=\"center-align\">\r\n            <h4>Welcome {firebase.auth().currentUser.displayName}</h4>\r\n            <h5>Currently in developer mode</h5>\r\n            <Link to={'/provider'} className=\"btn red lighten-1\">View as Provider</Link> \r\n            <Link to={'/customer'} className=\"btn blue lighten-1\">View as Customer</Link>\r\n            </div>\r\n          </span>\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={this.uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )}\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createOwned} from '../../store/actions/ownedActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n//Used to create a new provider.\r\nclass CreateOwn extends Component {\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        ownedDescription: '',\r\n        opening: '',\r\n        closing: ''\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createOwned(this.state);\r\n        this.props.history.push('./provider');\r\n    }\r\n    render() {\r\n\r\n        const {auth} = this.props;\r\n\r\n        //Route guard.\r\n        if(!auth.uid){\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"black-text\">Create a new provider!</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">Service Provider Name</label>\r\n                        <input type=\"text\" id=\"name\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <textarea id=\"description\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"ownedDescription\">Owner Description</label>\r\n                        <textarea id=\"ownedDescription\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"opening\">Opening</label>\r\n                        <input type=\"time\" id=\"opening\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"closing\">Closing</label>\r\n                        <input type=\"time\" id=\"closing\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn red lighten-1\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n//Fires off to redux actions and reducers.\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createOwned: (owned) => dispatch(createOwned(owned))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOwn)\r\n","\r\n//Changing redux and firestore process.\r\nexport const createOwned = (owned) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const state = getState();\r\n\r\n        firestore.collection('providers').add({\r\n            ...owned,\r\n            owned: state.firebase.auth.uid,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type:'CREATE_OWNED', owned});\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_OWNED_ERROR', err});\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteOwned = (owned) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n\r\n        firestore.collection('providers').doc(owned.id).delete().then(() => {\r\n            dispatch({type:'DELETE_OWNED', owned});\r\n        }).catch((err) => {\r\n            dispatch({type: 'DELETE_OWNED_ERROR', err});\r\n        })\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport {Link} from 'react-router-dom'\r\n\r\n//Queue system implemented here.\r\nclass QueuePage extends Component {\r\n    state = {\r\n        queue: 0,\r\n        inQueue: false,\r\n        isOpen: false\r\n    }\r\n\r\n    //Reads and saves data from firebase's realtime database.\r\n    componentDidMount(){\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        const fbDBRef = firebase.database().ref().child('object').child(lastURLSegment).child('queue');\r\n        fbDBRef.on('value', snap => {\r\n            this.setState({\r\n                queue: snap.val()\r\n            });\r\n        });\r\n        const fbDBRefOpen = firebase.database().ref().child('object').child(lastURLSegment).child('isOpen');\r\n        fbDBRefOpen.on('value', snap => {\r\n            this.setState({\r\n                isOpen: snap.val()\r\n            });\r\n        });\r\n    }\r\n\r\n    //Gets queue data from firebase realtime database and edits it.\r\n    joinQueue = () => {\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        var queue = this.state.queue;\r\n        queue++;\r\n        firebase.database().ref().child('object').child(lastURLSegment).update({queue});\r\n        this.setState({inQueue:true});\r\n    }\r\n\r\n    quitQueue = () => {\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        var queue = this.state.queue;\r\n        queue--;\r\n        firebase.database().ref().child('object').child(lastURLSegment).update({queue});\r\n        this.setState({inQueue:false});\r\n    }\r\n\r\n    render() {\r\n\r\n        const buttonType = this.state.inQueue ? <button className=\"btn blue lighten-1\" onClick={this.quitQueue}>Quit Queue</button> \r\n        :<button className=\"btn blue lighten-1\" onClick={this.joinQueue}>Join Queue</button>;\r\n\r\n        const queueDescript = this.state.inQueue ? <h4>You are number {this.state.queue}</h4> \r\n        :<h4>The queue currently has {this.state.queue} people</h4>;\r\n\r\n        const queueZero = this.state.queue === 0 & this.state.inQueue ? <div><h4>It's your turn, thank you for waiting!</h4>\r\n        <Link to={'/customer'} className=\"btn blue lighten-1\">Return to main page</Link></div> \r\n        : <div>{queueDescript}{buttonType}</div>\r\n\r\n        const closedQueue = this.state.isOpen ? <div>{queueZero}</div> : <h4>Queue is closed!</h4> \r\n        return (\r\n            <div class=\"center-align\">\r\n                {closedQueue}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QueuePage\r\n","import React, { Component } from 'react'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/database'\r\n\r\n//Sets up queue functions for providers to manipulate.\r\n\r\nclass OwnedQueue extends Component {\r\n    state = {\r\n        queue: 0,\r\n        isOpen: false\r\n    }\r\n\r\n    //Reads and saves down data from the firebase realtime database.\r\n    componentDidMount(){\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        const fbDBRef = firebase.database().ref().child('object').child(lastURLSegment).child('queue');\r\n        fbDBRef.on('value', snap => {\r\n            this.setState({\r\n                queue: snap.val()\r\n            });\r\n        });\r\n        const fbDBRefOpen = firebase.database().ref().child('object').child(lastURLSegment).child('isOpen');\r\n        fbDBRefOpen.on('value', snap => {\r\n            this.setState({\r\n                isOpen: snap.val()\r\n            });\r\n        });\r\n    }\r\n\r\n    //Lets the provider open the queue and edits the realtime database.\r\n    openQueue = () => {\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        var isOpen = true\r\n        this.setState({isOpen:true});\r\n        firebase.database().ref().child('object').child(lastURLSegment).update({isOpen});\r\n    }\r\n\r\n    //Lets the provider close the queue and edits the realtime database.\r\n    closeQueue = () => {\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        var isOpen = false\r\n        this.setState({isOpen:false});\r\n        var queue = 0;\r\n        firebase.database().ref().child('object').child(lastURLSegment).update({isOpen});\r\n        firebase.database().ref().child('object').child(lastURLSegment).update({queue});\r\n    }\r\n\r\n    //Adds customers to the queue manually.\r\n    addQueue = () => {\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        if(this.state.isOpen === true){\r\n            var queue = this.state.queue;\r\n            queue++;\r\n            firebase.database().ref().child('object').child(lastURLSegment).update({queue});\r\n        }\r\n\r\n    }\r\n\r\n    //Subtracts customers to the queue manually.\r\n    subQueue = () => {\r\n        var pageURL = this.props.location.pathname;\r\n        var lastURLSegment = pageURL.substring(pageURL.lastIndexOf('/') + 1);\r\n        if(this.state.isOpen === true){\r\n            if(this.state.queue > 0){\r\n                var queue = this.state.queue;\r\n                queue--;\r\n                firebase.database().ref().child('object').child(lastURLSegment).update({queue});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const queueDescript = this.state.isOpen ? <h4>Currently {this.state.queue} people in queue</h4> \r\n        :<h4>Queue is closed</h4>;\r\n\r\n        const buttonType = this.state.isOpen ? \r\n        <div> <button className=\"btn red lighten-1\" onClick={this.closeQueue}>Close Queue</button>\r\n        <button className=\"btn red lighten-1\" onClick={this.addQueue}>Increase Queue</button>\r\n        <button className=\"btn red lighten-1\" onClick={this.subQueue}>Decrease Queue</button> </div>\r\n        :\r\n        <button className=\"btn red lighten-1\" onClick={this.openQueue}>Open Queue</button>;\r\n        return (\r\n            <div class=\"center-align\">\r\n                {queueDescript}\r\n                {buttonType}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OwnedQueue\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport MainBoardCust from './components/customer/MainBoardCust'\nimport MainBoardProv from './components/provider/MainBoardProv'\nimport ProviderDetails from './components/customer/ProviderDetails'\nimport SignIn from './components/auth/SignIn'\nimport CreateOwn from './components/provider/CreateOwn'\nimport QueuePage from './components/customer/QueuePage'\nimport OwnedQueue from './components/provider/OwnedQueue'\n\n\nclass App extends Component{\n\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/queue/:id' component={QueuePage} />\n            <Route exact path='/ownedQueue/:id' component={OwnedQueue} />\n            <Route exact path='/' component={SignIn} />\n            <Route path='/customerList/:id' component={ProviderDetails} />\n            <Route path='/customer' component={MainBoardCust} />\n            <Route path='/provider' component={MainBoardProv} />\n            <Route path='/create' component={CreateOwn} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    cust: []\r\n}\r\n\r\nconst custReducer = (state = initState, action) => {\r\n    return state\r\n}\r\n\r\nexport default custReducer","const initState = {\r\n    owned: []\r\n}\r\n\r\n//Catching different cases in the redux reducer.\r\nconst ownedReducer = (state = initState, action) => {\r\n    switch (action.type){\r\n        case 'CREATE_OWNED':\r\n            console.log('created', action.owned);\r\n            return state;\r\n            \r\n        case 'CREATE_OWNED_ERROR':\r\n            console.log('create error', action.err);\r\n            return state;\r\n            \r\n        case 'DELETE_OWNED':\r\n            console.log('created', action.owned);\r\n            return state;\r\n                \r\n        case 'DELETE_OWNED_ERROR':\r\n            console.log('delete error', action.err);\r\n            return state;    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ownedReducer","import custReducer from './custReducer'\r\nimport ownedReducer from './ownedReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    cust: custReducer,\r\n    owned: ownedReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n  \r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDSlzx-fTFJsPSNB2g_8rr0ykiX_v25sQw\",\r\n    authDomain: \"accenture-qskip.firebaseapp.com\",\r\n    databaseURL: \"https://accenture-qskip.firebaseio.com\",\r\n    projectId: \"accenture-qskip\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"340889420456\",\r\n    appId: \"1:340889420456:web:3972aa451af70e77\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {attachAuthIsReady: true})\n    )\n);\n\nstore.firebaseAuthIsReady.then(() =>{\n\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n    serviceWorker.unregister(); \n})\n\n"],"sourceRoot":""}